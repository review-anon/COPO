# Model arguments
model_name_or_path: meta-llama/Meta-Llama-3-8B-Instruct
torch_dtype: bfloat16
use_flash_attention_2: true

# LoRA arguments
use_peft: true
load_in_4bit: False 
lora_r: 128
lora_alpha: 128
lora_dropout: 0.05
lora_target_modules:
- q_proj
- k_proj
- v_proj
- o_proj
- gate_proj
- up_proj
- down_proj

# Data training arguments
# For definitions, see: src/h4/training/config.py
dataset_mixer: {updated: HuggingFaceH4/ultrafeedback_binarized, original: HuggingFaceH4/ultrafeedback_binarized} # train & test
dataset_splits:
- train_prefs
- test_prefs
preprocessing_num_workers: 12

# DPOTrainer arguments
bf16: true
beta: 0.01
alpha: 0.0001        # 默认 alpha 0.0001
do_eval: false
gradient_accumulation_steps: 4
gradient_checkpointing: true
gradient_checkpointing_kwargs:
  use_reentrant: False
hub_model_id: COPO-Llama-3-8B-Instruct
learning_rate: 5.0e-7
log_level: info
logging_steps: 10
lr_scheduler_type: cosine
max_length: 1024
max_prompt_length: 512
num_train_epochs: 1
optim: adamw_torch
output_dir: data/COPO-Llama-3-8B-Instruct
per_device_train_batch_size: 2                 # TODO: 默认是4
per_device_eval_batch_size: 2                  # TODO: 默认是4
push_to_hub: false                             # TODO: 网络原因不激活
report_to:
- wandb
run_name: COPO-Llama-3-8B-Instruct       # TODO: wandb runname
save_strategy: "no"                      # "epoch": Save is done at the end of each epoch. "steps": Save is done every save_steps.
save_steps: 200
save_total_limit: 1
seed: 42
warmup_ratio: 0.1

# Counter arguments
bonus_exponent: 0.5
